{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ProcessOrderLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/slsB-local-processOrder"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "slsB",
                  "local",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/slsB-local*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/slsB-local*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:PutItem",
                    "dynamodb:GetItem",
                    "dynamodb:UpdateItem",
                    "dynamodb:Query",
                    "dynamodb:Scan"
                  ],
                  "Resource": "arn:aws:dynamodb:us-east-1:000000000000:table/order-table"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:SendMessage",
                    "sqs:ChangeMessageVisibility"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "orderQueueEB6EB4D1",
                        "Arn"
                      ]
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:ReceiveMessage",
                    "sqs:DeleteMessage",
                    "sqs:GetQueueAttributes"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "orderQueueEB6EB4D1",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "slsB",
              "local",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "ProcessOrderLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "hot-reload",
          "S3Key": "/home/fernando/Escritorio/order-pipeline-sqs/order-pipeline-sqs-v2/slsB"
        },
        "Handler": "src/handlers/processOrder.handler",
        "Runtime": "nodejs18.x",
        "FunctionName": "slsB-local-processOrder",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "TABLE_NAME": "order-table",
            "AWS_ACCESS_KEY_ID": "test",
            "AWS_SECRET_ACCESS_KEY": "test",
            "AWS_REGION": "us-east-1",
            "AWS_ENDPOINT_URL": "http://localhost:4566"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "ProcessOrderLogGroup"
      ]
    },
    "ProcessOrderLambdaVersion88V65gs02zyZSH9qQfAUEaxzleJZbg8MLGgX5qdqQ0": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ProcessOrderLambdaFunction"
        },
        "CodeSha256": "ULSruH0b009w49xQn/aJHsTNaSkNA9iBTL5kBhZ7rSc="
      }
    },
    "ProcessOrderEventSourceMappingSQSOrderQueueEB6EB4D1": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": [
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "BatchSize": 1,
        "MaximumBatchingWindowInSeconds": 0,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "orderQueueEB6EB4D1",
            "Arn"
          ]
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "ProcessOrderLambdaFunction",
            "Arn"
          ]
        },
        "Enabled": true,
        "FunctionResponseTypes": [
          "ReportBatchItemFailures"
        ]
      }
    },
    "OrderTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "order-table",
        "AttributeDefinitions": [
          {
            "AttributeName": "orderId",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "orderId",
            "KeyType": "HASH"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST"
      }
    },
    "orderQueueDlq069498A5": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "MessageRetentionPeriod": 1209600,
        "QueueName": "slsB-local-orderQueue-dlq"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "orderQueueEB6EB4D1": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "slsB-local-orderQueue",
        "RedrivePolicy": {
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "orderQueueDlq069498A5",
              "Arn"
            ]
          },
          "maxReceiveCount": 3
        },
        "VisibilityTimeout": 36
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": "serverless-framework-deployments-us-east-1-7cc720e8-a794",
      "Export": {
        "Name": "sls-slsB-local-ServerlessDeploymentBucketName"
      }
    },
    "ProcessOrderLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ProcessOrderLambdaVersion88V65gs02zyZSH9qQfAUEaxzleJZbg8MLGgX5qdqQ0"
      },
      "Export": {
        "Name": "sls-slsB-local-ProcessOrderLambdaFunctionQualifiedArn"
      }
    },
    "OrderQueueUrl": {
      "Value": {
        "Fn::GetAtt": [
          "orderQueue",
          "QueueUrl"
        ]
      },
      "Export": {
        "Name": "order-queue-url"
      }
    },
    "orderQueueQueueArn2D2C5816": {
      "Description": "ARN of the \"orderQueue\" SQS queue.",
      "Value": {
        "Fn::GetAtt": [
          "orderQueueEB6EB4D1",
          "Arn"
        ]
      }
    },
    "orderQueueQueueUrl9A81650D": {
      "Description": "URL of the \"orderQueue\" SQS queue.",
      "Value": {
        "Ref": "orderQueueEB6EB4D1"
      }
    },
    "orderQueueDlqUrl30CD5E82": {
      "Description": "URL of the \"orderQueue\" SQS dead letter queue.",
      "Value": {
        "Ref": "orderQueueDlq069498A5"
      }
    }
  }
}