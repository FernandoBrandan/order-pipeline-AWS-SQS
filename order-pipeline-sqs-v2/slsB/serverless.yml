service: slsB

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  stage: local
  environment:
    TABLE_NAME: order-table 
    AWS_ACCESS_KEY_ID: test
    AWS_SECRET_ACCESS_KEY: test
    AWS_REGION: us-east-1
    AWS_ENDPOINT_URL: http://localhost:4566
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:UpdateItem
        - dynamodb:Query
        - dynamodb:Scan
      Resource:
        - arn:aws:dynamodb:us-east-1:000000000000:table/order-table
 
plugins: 
  - serverless-localstack
  - serverless-offline 
  - serverless-lift 

custom:
  localstack:
    stages:
      - local
    host: http://localhost
    edgePort: 4566
    autostart: true 
    lambda:
      mountCode: true

  serverless-offline:
    httpPort: 3003
    lambdaPort: 3004  

functions:
  processOrder:
    handler: src/handlers/processOrder.handler

constructs:
  orderQueue:
    type: queue
    worker: processOrder
          
resources:
  Resources:
    
    OrderTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: order-table
        AttributeDefinitions:
          - AttributeName: orderId
            AttributeType: S
        KeySchema:
          - AttributeName: orderId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST 

  Outputs:
    OrderQueueUrl:
      Value:
        Fn::GetAtt: [orderQueue, QueueUrl]   # ← o el ID real del recurso si usás Lift
      Export:
        Name: order-queue-url